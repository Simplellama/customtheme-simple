{% assign metaobj = section.settings.metaobj %}
{% assign panel_section_obj = shop.metaobjects.video_panel_slider_section %}
{% assign read_more = false %}
{% assign moreItemsCount = 0 %}



{% for panel_section in panel_section_obj.values %}
{%  if metaobj == panel_section.display_name %}
{% comment %} {{ panel_section | json }} {% endcomment %}
<section class="section-{{ section.id }} pt-12 pb-36 bg-primary-bg">
    <div class="container flex flex-col gap-y-8">
        <div class="flex flex-col text-center gap-y-4 w-full mb-4">
            {% comment %} <p class="text-lg/7 font-bold uppercase text-primary-orange">{{ panel_section.subtitle }}</p> {% endcomment %}
            <h3 class="Heading tracking-tight text-5xl font-bold text-primary-black">{{ panel_section.title }}</h3>
        </div>
        <div class="">
            <div class="splide mobile-slider">
                <div class="splide__track">
                    <ul class="splide__list flex gap-x-2">
                        {% for panel in panel_section.video_panel.value %}
                        <li class="splide__slide bg-primary-bg">
                            <div class="panel w-full h-fit  flex flex-col">
                                <div class="relative h-[500px]">
                                  <div class="absolute top-2 right-2 z-10 bg-dark-green text-white px-3 py-2 text-sm">
                                    <span>Flest vælger</span>
                                  </div>

                                    <img class="object-cover object-center w-full h-full" src="{{ panel.image | image_url: width: 600 }}">
                                    {% comment %} <div class="absolute inset-0 flex flex-col items-center justify-center gap-y-2">
                                      <div class="w-12 h-12 flex items-center justify-center border border-primary-bg rounded-full">
                                        <svg class="w-8 h-8 text-primary-bg rounded-full" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                          <path d="M8 5v14l11-7z"></path>
                                        </svg>
                                      </div>
                                      <span class="text-white text-base font-semibold">Play video</span>
                                    </div> {% endcomment %}
                                </div>
                                <div class="flex flex-col gap-y-2 py-4 min-h-[250px]">
                                    <div class="flex flex-col gap-y-2">
                                        <h3 class="Heading tracking-tight font-bold text-3xl text-primary-text">{{ panel.title }} <span class="font-thin Heading text-3xl text-primary-text">{{ panel.title_light }}</span></h3>
                                        {% if panel.subtitle != blank %}<p class="text-base/5 text-primary-text">{{ panel.subtitle }}</p>{% endif %}
                                    </div>
        
                                    
                                    {% if panel.product.value != blank %}
                                        <div class="flex flex-col">
                                            <div class="flex flex-row items-start gap-x-2 pb-2">
                                                <div class="flex flex-row items-start gap-x-2">

                                                  <span class="text-base {% if panel.product.value.compare_at_price %} text-button-primary {% endif %}">{{ panel.product.value.price | money }}</span>
                                                {% if panel.product.value.compare_at_price %}
                                                    <span class="text-base">Før: <span class="line-through">{{ panel.product.value.compare_at_price | money }}</span></span>
                                                {% endif %}
                                                
                                         
                                                </div>
                                 
                                            </div>
{% comment %}         
                                            <div class="flex mt-4 gap-x-2 justify-start items-center ">
                                              
                                                <button type="button" class="flex items-center w-full justify-center gap-x-2 rounded-full min-h-[54px] bg-primary-black border border-transparent px-5 text-lg font-semibold text-white  shadow-sm hover:bg-medium-green" href="">{{ 'products.product.add_to_cart' | t }} {% render 'icon', icon: 'cart', size: 16, class: 'stroke-[1.5px] -mt-1', stroke: 'var(--primary-bg)' %}</button>
                                                <a type="button" class="flex items-center w-full justify-center gap-x-2 text-primary-black" href="{{ panel.product.value.url }}">{{ 'collections.general.read_more' | t }} {% render 'icon', icon: 'arrow-right', size: 10, class: '', fill: 'var(--primary-text)' %}</a> 
                                            </div> {% endcomment %}
                                        </div>
                                    {% endif %}
        
                         
                                    <h3 class="text-base pt-3  pb-1 text-primary-text">Inkluderet i pakken:</h3>
                                    
                                    <ul class="panel-{{ forloop.index }} flex flex-wrap gap-x-1 gap-y-2 relative" id="info-panel-list-{{ forloop.index }}">
                                        {% for item in panel.list_item.value %}
        
                                            <li class="inline-flex items-center rounded-full bg-primary-bg px-2 py-1 text-sm font-medium text-primary-text ring-1 ring-600/20 ring-border hover:ring-light-green ring-inset">
                                            <button class="panel-item-trigger-{{ forloop.index }} flex w-full justify-between items-center">
                                                    <div class="flex items-center gap-x-1"> 
                                                    {% render 'icon', icon: 'solid-circle', size: '10px', fill: 'var(--primary-text)' %}
                                                    <p class="text-sm/5">{{ item.title }}</p> 
                                                    {% comment %} {% render 'icon', icon: 'check', size: '14px', class: 'fill-light-green' %} {% endcomment %}
                                                    </div>
                
                                                </button> 
                                            </li>
        
                                            {% render 'panel-item-popup', panel-index: forloop.index, panel-list-item: panel.list_item.value %}
                                      {% endfor %}
                                    </ul>
         
        
                        
                        
                                </div>
                      
                            </div>
                        </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>

        </div>
    </div>
</section>
{% endif %}

{% endfor %}


<script>
  document.addEventListener('DOMContentLoaded', function () {


      new Splide('.splide.mobile-slider', {
        perPage: 4,
        gap: '0.5rem', 
        pagination: true,
        arrows: true,
        breakpoints: {
          640: {
            perPage: 1,
            gap: '0.5rem',
          },
          768: {
            perPage: 2,
            gap: '0.5rem',
          },
          1024: {
            perPage: 2,
            gap: '0.5rem',
          },
          1280: {
            perPage: 3,
            gap: '0.5rem',
          },
        },
      }).mount();
 

    const panelTriggers = document.querySelectorAll('[class^="panel-item-trigger-"]');
    panelTriggers.forEach(trigger => {
      trigger.addEventListener('click', function (event) {
        event.preventDefault();
        const panelIndex = this.className.match(/panel-item-trigger-(\d+)/)[1];
        const popup = document.getElementById(`panel-popup-${panelIndex}`);
        const overlay = document.getElementById('overlay');
        const mainSection = document.querySelector('.main-section');
        if (popup && overlay && mainSection) {
          popup.style.display = 'block';
          overlay.style.display = 'block';
          document.body.style.overflow = 'hidden';
          mainSection.classList.add('bg-no-scroll');
        }
      });
    });

    const closeButtons = document.querySelectorAll('.close-button');
    closeButtons.forEach(button => {
      button.addEventListener('click', function () {
        const popup = this.closest('[id^="panel-popup-"]');
        const overlay = document.getElementById('overlay');
        const mainSection = document.querySelector('.main-section');
        if (popup && overlay && mainSection) {
          popup.style.display = 'none';
          overlay.style.display = 'none';
          document.body.style.overflow = '';
          mainSection.classList.remove('bg-no-scroll');
        }
      });
    });

    const overlay = document.getElementById('overlay');
    if (overlay) {
      overlay.addEventListener('click', function () {
        const popups = document.querySelectorAll('[id^="panel-popup-"]');
        const mainSection = document.querySelector('.main-section');
        popups.forEach(popup => {
          popup.style.display = 'none';
        });
        overlay.style.display = 'none';
        document.body.style.overflow = '';
        if (mainSection) {
          mainSection.classList.remove('bg-no-scroll');
        }
      });
    }
  });
</script>


<style>
  .section-{{ section.id }} .splide__arrow:disabled {
    display: none;
  }
</style>

{% schema %}
{
    "name": "Info panel section",
    "settings": [
        {
            "type": "text",
            "id": "metaobj",
            "label": "Metaobj handle"
        }
    ],
    "presets": [
        {
          "name": "Info panel section",
          "category": "section"
        }
      ] 

}
{% endschema %}